"""initial migration

Revision ID: 0001
Revises: 
Create Date: 2022-03-05 19:39:16.177446

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0001"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "institutions",
        sa.Column("institution_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("institution_id"),
        schema="account_connections",
    )
    op.create_table(
        "robinhood_instruments",
        sa.Column("instrument_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("instrument_id"),
        schema="account_connections",
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("gender", sa.String, nullable=False),
        sa.Column("birthdate", sa.Date, nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "institution_connections",
        sa.Column("connection_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("institution_id", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("json_web_token", sa.String(), nullable=True),
        sa.Column("refresh_token", sa.String(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["institution_id"],
            ["account_connections.institutions.institution_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("connection_id"),
        schema="account_connections",
    )
    op.create_index(
        op.f("ix_account_connections_institution_connections_institution_id"),
        "institution_connections",
        ["institution_id"],
        unique=False,
        schema="account_connections",
    )
    op.create_index(
        op.f("ix_account_connections_institution_connections_user_id"),
        "institution_connections",
        ["user_id"],
        unique=False,
        schema="account_connections",
    )
    op.create_index(
        "ix_user_id_institution_id",
        "institution_connections",
        ["user_id", "institution_id"],
        unique=True,
        schema="account_connections",
    )
    op.create_table(
        "theses",
        sa.Column("thesis_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("sources", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("asset_symbol", sa.String(), nullable=False),
        sa.Column("sentiment", sa.String(), nullable=False),
        sa.Column("is_authors_current", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("thesis_id"),
        sa.UniqueConstraint("user_id", "title"),
    )
    op.create_index(
        op.f("ix_theses_asset_symbol"), "theses", ["asset_symbol"], unique=False
    )
    op.create_index(op.f("ix_theses_user_id"), "theses", ["user_id"], unique=False)
    op.create_index(op.f("ix_theses_username"), "theses", ["username"], unique=False)
    op.create_table(
        "assets",
        sa.Column("asset_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("institution_id", sa.String(), nullable=True),
        sa.Column("thesis_id", sa.BigInteger(), nullable=True),
        sa.Column("asset_symbol", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.Column("position_value", sa.Float(), nullable=True),
        sa.Column("skin_rating", sa.Float(), nullable=True),
        sa.Column("average_buy_price", sa.Float(), nullable=True),
        sa.Column("total_contribution", sa.Float(), nullable=True),
        sa.Column("is_up_to_date", sa.Boolean(), nullable=False),
        sa.Column("update_errors", sa.Text(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["institution_id"],
            ["account_connections.institutions.institution_id"],
        ),
        sa.ForeignKeyConstraint(
            ["thesis_id"],
            ["theses.thesis_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("asset_id"),
    )
    op.create_index(op.f("ix_assets_thesis_id"), "assets", ["thesis_id"], unique=False)
    op.create_index(op.f("ix_assets_user_id"), "assets", ["user_id"], unique=False)
    op.create_index(
        "ix_user_id_asset_symbol_institution_id",
        "assets",
        ["user_id", "asset_symbol", "institution_id"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_user_id_asset_symbol_institution_id", table_name="assets")
    op.drop_index(op.f("ix_assets_user_id"), table_name="assets")
    op.drop_index(op.f("ix_assets_thesis_id"), table_name="assets")
    op.drop_table("assets")
    op.drop_index(op.f("ix_theses_username"), table_name="theses")
    op.drop_index(op.f("ix_theses_user_id"), table_name="theses")
    op.drop_index(op.f("ix_theses_asset_symbol"), table_name="theses")
    op.drop_table("theses")
    op.drop_index(
        "ix_user_id_institution_id",
        table_name="institution_connections",
        schema="account_connections",
    )
    op.drop_index(
        op.f("ix_account_connections_institution_connections_user_id"),
        table_name="institution_connections",
        schema="account_connections",
    )
    op.drop_index(
        op.f("ix_account_connections_institution_connections_institution_id"),
        table_name="institution_connections",
        schema="account_connections",
    )
    op.drop_table("institution_connections", schema="account_connections")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_table("robinhood_instruments", schema="account_connections")
    op.drop_table("institutions", schema="account_connections")
    # ### end Alembic commands ###
